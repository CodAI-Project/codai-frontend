trigger:
- main

variables:
- group: firebase_dev

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.17.0'
  displayName: 'Install Node.js'

- script: |
    npm install -g firebase-tools
    npm install next@latest react@latest react-dom@latest
    npm install
  displayName: 'installing dependencies'

- script: |
    echo "APP_ENV=${APP_ENV}" > .env
    echo "NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}" >> .env
    echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}" >> .env
    echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" >> .env
    echo "NEXT_PUBLIC_API_KEY_OPEN_AI=${NEXT_PUBLIC_API_KEY_OPEN_AI}" >> .env
  displayName: 'defining enviroment'
  
- script: |
    firebase experiments:enable webframeworks
  displayName: 'enabling firebase experiments'
    
- script: |
    
    echo '$(FIREBASE_SERVICE_ACCOUNT_KEY)' > key.json
    export GOOGLE_APPLICATION_CREDENTIALS=$(System.DefaultWorkingDirectory)/key.json
    npm run deploy:dev
  displayName: 'deploying firebase project'